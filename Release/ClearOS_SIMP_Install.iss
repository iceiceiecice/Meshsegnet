; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "ClearOS"
#define MyAppVersion "4.5.5.3"
#define MyAppPublisher "ClearMed Corp. Copyright(c) 2020"
#define MyAppURL "http://www.clearbos.com/"
#define MyAppExeName "ClearOS Installer"
#define MyAppExeNameA "ClearShape.exe"
#define MyAppExeNameB "ClearDesign.exe"
#define MyAppExeNameC "ClearWork.exe"
#define MyAppExeNameD "ClearCheck.exe"
#define MutexName "ClearMutexName"
#define MyMedicineICO  "Medicine.ico"
#define MyOnlineICO  "ClearSite_online.ico"
#define MyOfflineICO  "ClearSite_Offline.ico"
#define MyModelICO    "Model.ico"
#define ResourcesPath ".\publish\*"
#define AppData GetEnv('APPDATA')
#define OutputFilename "ClearOS_SIMP_V"

#define MyDateTimeString GetDateTimeString('yymmdd_hhnnss', '', '')



[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{AAD39D90-7727-48BD-9F41-8F8421917CC1}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
VersionInfoVersion={#MyAppVersion}
VersionInfoCopyright={#MyAppPublisher}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
UsePreviousAppDir=No
DefaultDirName={pf}\ClearBos\{#MyAppVersion}
DefaultGroupName={#MyAppVersion}
LicenseFile=.\publish\license.txt
;InfoAfterFile=.\readme.txt
OutputDir=..\
OutputBaseFilename={#OutputFilename}{#MyAppVersion}_{#MyDateTimeString}
;安装图标
SetupIconFile=.\publish\file.ico
;Compression=lzma/Max
;SolidCompression=true
Compression=lzma
SolidCompression=yes
WizardImageBackColor=$FFFFFF
WindowVisible=false
BackColor=clFuchsia
WizardImageStretch=false
PrivilegesRequired=admin
AppMutex={#MutexName}
DirExistsWarning=no
DisableDirPage=yes
Versioninfodescription={#MyAppName} 安装程序
VersionInfoCompany=http://www.clearbos.com/


[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: fileassoc; Description: CBM文件与{#MyAppName}关联; GroupDescription: 附加任务选项; Flags: unchecked
;Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked
;Name: "quicklaunchicon"; Description: "{cm:CreateQuickLaunchIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked; OnlyBelowVersion: 0,6.1


[Dirs]
Name: "{app}" ; Permissions: everyone-modify

[Messages]
//BeveledLabel=可丽尔博士   //安装过程中显示文本信息
   DiskSpaceMBLabel=剩余磁盘空间至少要有 [mb] MB。

[Files]
; fold
;资源文件，安装向导
Source: ".\Attachment\*"; DestDir: "{app}\bin\Attachment"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: ".\OfflineBrowse\*"; DestDir: "{app}\bin\OfflineBrowse"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: ".\OfflineBrowse\images\*"; DestDir: "{app}\bin\OfflineBrowse\images"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: {#ResourcesPath}; DestDir: {tmp}; Flags: dontcopy solidbreak ; Attribs: hidden system
Source: ".\publish\icons\*"; DestDir: "{app}\bin\publish\icons"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: ".\Root\*"; DestDir: "{app}\bin\Root"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: ".\Template\*"; DestDir: "{app}\bin\Template"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: ".\ToothMoveDiff.cfg"; DestDir: "{app}\bin"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: ".\platforms\*"; DestDir: "{app}\bin\platforms"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: ".\imageformats\*"; DestDir: "{app}\bin\imageformats"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: ".\yanshi\*"; DestDir: "{userappdata}\..\Roaming\ClearBos\"; Flags: ignoreversion recursesubdirs createallsubdirs
;Source: ".\assert\*"; DestDir: "{app}\bin\assert"; Flags: ignoreversion recursesubdirs createallsubdirs

; font
Source: ".\arial.ttf"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\msyhbd.ttf"; DestDir: "{app}\bin"; Flags: ignoreversion

; text
Source: ".\server.xml"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\ColorConfig.ini"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\ColorRenderGum.ini"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\ColorRenderJaw.ini"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\ColorRenderTooth.ini"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\log4cplus.properties"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\ClearSample.ini"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\ClearDesign.ini"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\Log4cxxConfig-ClearCheck.xml"; DestDir: "{app}\bin"; Flags: ignoreversion

; picture
Source: ".\bkg.bmp"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\gum.bmp"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\teeth.bmp"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\LVLogo.png"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\bkgClearCheck.bmp"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\GumImagebump.png"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\GumImageredwhite.png"; DestDir: "{app}\bin"; Flags: ignoreversion
; exe
Source: ".\CBAutoUpdate.exe"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\CBOfflineBrowser.exe"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\ClearCheck.exe"; DestDir: "{app}\bin"; Flags: ignoreversion
;Source: ".\ClearDesign.exe"; DestDir: "{app}\bin"; Flags: ignoreversion
;Source: ".\ClearShape.exe"; DestDir: "{app}\bin"; Flags: ignoreversion
;Source: ".\ClearWork.exe"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\ClearSample.exe"; DestDir: "{app}\bin"; Flags: ignoreversion

;bat
Source: ".\PMSort.bat"; DestDir: "{app}\bin"; Flags: ignoreversion

; dll
Source: ".\avcodec-56.dll"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\avdevice-56.dll"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\avfilter-5.dll"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\avformat-56.dll"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\avutil-54.dll"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\CbControlLib.dll"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\CbFileTransferLib.dll"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\CbKits.dll"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\CbMathLib.dll"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\CbNurbsLib.dll"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\CbOrthoLib.dll"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\CbRenderLib.dll"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\CbArrayToothLib.dll"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\glew32.dll"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\LZMA.dll"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\swresample-1.dll"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\swscale-3.dll"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\log4cplusU.dll"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\CbApplicationLayer.dll"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\FreeImage.dll"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\postproc-53.dll"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\Qt5Core.dll"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\Qt5Gui.dll"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\Qt5Widgets.dll"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\CbProduct.dll"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\tinyxml2d.dll"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\freetype.dll"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\ucrtbased.dll"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\vcruntime140d.dll"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\log4cxx.dll"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\CGAL_Core-vc140-mt-4.13.1.dll"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\CGAL_ImageIO-vc140-mt-4.13.1.dll"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\CGAL_Qt5-vc140-mt-4.13.1.dll"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\CGAL_Qt5-vc140-mt-gd-4.13.1.dll"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\CGAL-vc140-mt-4.13.1.dll"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\CGAL-vc140-mt-gd-4.13.1.dll"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\CbCGALib.dll"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\libgmp-10.dll"; DestDir: "{app}\bin"; Flags: ignoreversion
Source: ".\libmpfr-4.dll"; DestDir: "{app}\bin"; Flags: ignoreversion

; assert exe
Source: ".\publish\vc_redist.x86.exe"; DestDir: "{tmp}"; Flags: deleteafterinstall;
Source: ".\publish\file.ico"; DestDir: "{app}"; Flags: deleteafterinstall;

[Registry] 
Root: "HKLM"; SubKey: "SOFTWARE\Classes\WebClearShape"; ValueType: string; ValueName:;ValueData: "WebClearShape";Flags: CreateValueIfDoesntExist UninsDeleteKey;
Root: "HKLM"; SubKey: "SOFTWARE\Classes\WebClearShape"; ValueType: string; ValueName:"URL Protocol";ValueData: "{app}\bin\{#MyAppExeNameA} %l";Flags: CreateValueIfDoesntExist
Root: "HKLM"; SubKey: "SOFTWARE\Classes\WebClearShape\DefaultIcon"; ValueType: string; ValueName:;ValueData: "%SystemRoot%\system32\url.dll,0";Flags: CreateValueIfDoesntExist
Root: "HKLM"; SubKey: "SOFTWARE\Classes\WebClearShape\Shell"; ValueName: ; Flags: CreateValueIfDoesntExist; ValueType: string;
Root: "HKLM"; SubKey: "SOFTWARE\Classes\WebClearShape\Shell\open"; ValueName: ; Flags: CreateValueIfDoesntExist; ValueType: string;
Root: "HKLM"; SubKey: "SOFTWARE\Classes\WebClearShape\Shell\open\command"; ValueType: string; ValueName:;ValueData: "{app}\bin\{#MyAppExeNameA} %l";Flags: CreateValueIfDoesntExist

Root: "HKLM"; SubKey: "SOFTWARE\Classes\WebClearDesign"; ValueType: string; ValueName:;ValueData: "WebClearDesign";Flags: CreateValueIfDoesntExist UninsDeleteKey;
Root: "HKLM"; SubKey: "SOFTWARE\Classes\WebClearDesign"; ValueType: string; ValueName:"URL Protocol";ValueData: "{app}\bin\{#MyAppExeNameB} %l";Flags: CreateValueIfDoesntExist
Root: "HKLM"; SubKey: "SOFTWARE\Classes\WebClearDesign\DefaultIcon"; ValueType: string; ValueName:;ValueData: "%SystemRoot%\system32\url.dll,0";Flags: CreateValueIfDoesntExist
Root: "HKLM"; SubKey: "SOFTWARE\Classes\WebClearDesign\Shell"; ValueName: ; Flags: CreateValueIfDoesntExist; ValueType: string;
Root: "HKLM"; SubKey: "SOFTWARE\Classes\WebClearDesign\Shell\open"; ValueName: ; Flags: CreateValueIfDoesntExist; ValueType: string;
Root: "HKLM"; SubKey: "SOFTWARE\Classes\WebClearDesign\Shell\open\command"; ValueType: string; ValueName:;ValueData: "{app}\bin\{#MyAppExeNameB} %l";Flags: CreateValueIfDoesntExist

Root: "HKLM"; SubKey: "SOFTWARE\Classes\WebClearWork"; ValueType: string; ValueName:;ValueData: "WebClearWork";Flags: CreateValueIfDoesntExist UninsDeleteKey;
Root: "HKLM"; SubKey: "SOFTWARE\Classes\WebClearWork"; ValueType: string; ValueName:"URL Protocol";ValueData: "{app}\bin\{#MyAppExeNameC} %l";Flags: CreateValueIfDoesntExist
Root: "HKLM"; SubKey: "SOFTWARE\Classes\WebClearWork\DefaultIcon"; ValueType: string; ValueName:;ValueData: "%SystemRoot%\system32\url.dll,0";Flags: CreateValueIfDoesntExist
Root: "HKLM"; SubKey: "SOFTWARE\Classes\WebClearWork\Shell"; ValueName: ; Flags: CreateValueIfDoesntExist; ValueType: string;
Root: "HKLM"; SubKey: "SOFTWARE\Classes\WebClearWork\Shell\open"; ValueName: ; Flags: CreateValueIfDoesntExist; ValueType: string;
Root: "HKLM"; SubKey: "SOFTWARE\Classes\WebClearWork\Shell\open\command"; ValueType: string; ValueName:;ValueData: "{app}\bin\{#MyAppExeNameC} %l";Flags: CreateValueIfDoesntExist

Root: "HKLM"; SubKey: "SOFTWARE\Classes\WebClearCheck"; ValueType: string; ValueName:;ValueData: "WebClearCheck";Flags: CreateValueIfDoesntExist UninsDeleteKey;
Root: "HKLM"; SubKey: "SOFTWARE\Classes\WebClearCheck"; ValueType: string; ValueName:"URL Protocol";ValueData: "{app}\bin\{#MyAppExeNameD} %l";Flags: CreateValueIfDoesntExist
Root: "HKLM"; SubKey: "SOFTWARE\Classes\WebClearCheck\DefaultIcon"; ValueType: string; ValueName:;ValueData: "%SystemRoot%\system32\url.dll,0";Flags: CreateValueIfDoesntExist
Root: "HKLM"; SubKey: "SOFTWARE\Classes\WebClearCheck\Shell"; ValueName: ; Flags: CreateValueIfDoesntExist; ValueType: string;
Root: "HKLM"; SubKey: "SOFTWARE\Classes\WebClearCheck\Shell\open"; ValueName: ; Flags: CreateValueIfDoesntExist; ValueType: string;
Root: "HKLM"; SubKey: "SOFTWARE\Classes\WebClearCheck\Shell\open\command"; ValueType: string; ValueName:;ValueData: "{app}\bin\{#MyAppExeNameD} %l";Flags: CreateValueIfDoesntExist

//更新版本时需要更新注册表的值，默认是用ClearCheck打开
Root: "HKLM"; SubKey: "SOFTWARE\Classes\{#MyAppName}\Versions\{#MyAppVersion}"; ValueName: ; Flags: CreateValueIfDoesntExist; ValueType: string;
Root: "HKCR"; Subkey: "*.CBM"; ValueType: String; ValueData: "CBM文件"; Flags: uninsdeletekey; Tasks: fileassoc
Root: "HKCR"; Subkey: "CBM文件"; ValueType: String; ValueData: "CBM文件"; Flags: uninsdeletekey; Tasks: fileassoc
Root: "HKCR"; Subkey: "CBM文件\DefaultIcon"; ValueType: String; ValueData: "{app}\file.ico"; Flags: uninsdeletekey; Tasks: fileassoc
Root: "HKCR"; Subkey: "CBM文件\shell\open\command"; ValueType: String; ValueData: """{app}\bin\{#MyAppExeNameD}"" ""%1"""; Flags: uninsdeletekey; Tasks: fileassoc
Root: "HKCR"; Subkey: "CBM文件\shell\OpenWithClearCheck"; ValueType: String; ValueData: "使用&ClearCheck 打开"; Flags: uninsdeletekey; Tasks: fileassoc
Root: "HKCR"; Subkey: "CBM文件\shell\OpenWithClearCheck\command"; ValueType: String; ValueData: """{app}\bin\ClearCheck.exe"" ""%1"""; Flags: uninsdeletekey; Tasks: fileassoc
;Root: "HKCR"; Subkey: "cmediafile//Shell//Open//Command"; ValueType: string; ValueName: ""; ValueData: "{app}/CMediaManager.exe %1"


Root: "HKCU"; Subkey: "SoftWare\Classes\CBM_auto_file\shell\open\command"; ValueType: string; ValueData: """{app}\bin\ClearCheck.exe"" ""%1"""; Flags: createvalueifdoesntexist uninsdeletekey; Tasks: fileassoc
Root: "HKCR"; Subkey: "Applications\{#MyAppName}\shell\open\command"; ValueType: string; ValueData: """{app}\bin\ClearCheck.exe"" ""%1"""; Flags: createvalueifdoesntexist uninsdeletekey; Tasks: fileassoc
Root: "HKCU"; Subkey: "Software\Microsoft\Windows\CurrentVersion\Explorer\FileExts\.CBM\OpenWithList"; ValueType: string; ValueName: "MRUList"; ValueData: "a"; Flags: createvalueifdoesntexist uninsdeletekey; Tasks: fileassoc
Root: "HKCU"; Subkey: "Software\Microsoft\Windows\CurrentVersion\Explorer\FileExts\.CBM\OpenWithList"; ValueType: string; ValueName: "a"; ValueData: "ClearCheck.exe"; Flags: createvalueifdoesntexist uninsdeletekey; Tasks: fileassoc
Root: "HKCU"; Subkey: "Software\Microsoft\Windows\CurrentVersion\Explorer\FileExts\.CBM\OpenWithProgids"; ValueType: none; ValueName: "CBM_auto_file"; ValueData: "0"; Flags: createvalueifdoesntexist uninsdeletekey; Tasks: fileassoc


[Icons]
Name: "{group}\{#MyAppName}"; Filename: "{app}\bin\{#MyAppExeName}"
Name: "{group}\{cm:UninstallProgram,{#MyAppName}}"; Filename: "{uninstallexe}"
Name: "{userdesktop}\可丽尔博士医生登录"; Filename: "http://doctor.clearbos.com/index.html"; IconFilename: "{app}\bin\publish\icons\{#MyOnlineICO}"
;Name: "{userdesktop}\离线登录";Filename: "{app}\bin\CBOfflineBrowser.exe"; IconFilename: "{app}\bin\publish\icons\{#MyOfflineICO}"
Name: "{userdesktop}\可丽尔博士病例查看器"; Filename: "{app}\bin\ClearSample.exe"; IconFilename: "{app}\bin\publish\icons\ClearCheck.ico"


[UninstallDelete]
Type: filesandordirs; Name: "{app}"
Type: filesandordirs; Name: "{userappdata}\ClearBos"

[Run]
Filename: "{tmp}\vc_redist.x86.2008.exe"; Parameters: /q; WorkingDir: {tmp}; Flags: skipifdoesntexist; StatusMsg: "安装 Microsoft Visual C++ 2008 Runtime ...";
Filename: "{tmp}\vc_redist.x86.exe"; Parameters: /q; WorkingDir: {tmp}; Flags: skipifdoesntexist; StatusMsg: "安装 Microsoft Visual C++ 2015 Runtime ...";


[Components]
;Name: "ClearCheck"; Description: "ClearCheck"; Types:Custom; Flags: fixed


[Code]
type
  TBtnEventProc = procedure (h:HWND);
  TPBProc = function(h:hWnd;Msg,wParam,lParam:Longint):Longint;  //百分比
  TTimerProc = procedure(h:longword; msg:longword; idevent:longword; dwTime:longword);
const
  Radius  = 9;
  GWL_EXSTYLE = (-20);
  //窗口移动
  WM_SYSCOMMAND = $0112;
  WS_EX_LAYERED = $80000;
  WS_EX_TRANSPARENT = $20;
  LWA_COLORKEY = 1;
  TransparentColor = clLime;  //要去掉的图片底色
  TransparentPercent = 80;
  BTN_MAX_PATH = 1024;

  BtnClickEventID      = 1;
  BtnMouseEnterEventID = 2;
  BtnMouseLeaveEventID = 3;
  BtnMouseMoveEventID  = 4;
  BtnMouseDownEventID  = 5;
  BtnMouseUpEventID    = 6;

//function WrapBtnCallback(Callback: TBtnEventProc; ParamCount: Integer): Longword;  external 'wrapcallback@files:innocallback.dll stdcall';
//function  WrapTimerProc(callback: TTimerProc; Paramcount: Integer): Longword; external 'wrapcallback@files:innocallback.dll stdcall';
//
//function  LoadCursorFromFile(FileName: String): Cardinal; external 'LoadCursorFromFile{#A}@user32 stdcall';
//function  DeleteObject(p1: Longword): BOOL; external 'DeleteObject@gdi32.dll stdcall';
//function  GetPM(nIndex:Integer):Integer; external 'GetSystemMetrics@user32.dll stdcall';
////botva2
function  ImgLoad(Wnd :HWND; FileName :PAnsiChar; Left, Top, Width, Height :integer; Stretch, IsBkg :boolean) :Longint; external 'ImgLoad@{tmp}\botva2.dll stdcall delayload';
procedure ImgSetVisibility(img :Longint; Visible :boolean); external 'ImgSetVisibility@{tmp}\botva2.dll stdcall delayload';
procedure ImgApplyChanges(h:HWND); external 'ImgApplyChanges@{tmp}\botva2.dll stdcall delayload';
procedure ImgSetPosition(img :Longint; NewLeft, NewTop, NewWidth, NewHeight :integer); external 'ImgSetPosition@files:botva2.dll stdcall';
procedure ImgRelease(img :Longint); external 'ImgRelease@{tmp}\botva2.dll stdcall delayload';
procedure gdipShutdown;  external 'gdipShutdown@{tmp}\botva2.dll stdcall delayload';
function  WrapBtnCallback(Callback: TBtnEventProc; ParamCount: Integer): Longword; external 'wrapcallback@{tmp}\innocallback.dll stdcall delayload';
function  BtnCreate(hParent:HWND; Left,Top,Width,Height:integer; FileName:PAnsiChar; ShadowWidth:integer; IsCheckBtn:boolean):HWND;  external 'BtnCreate@{tmp}\botva2.dll stdcall delayload';
//procedure BtnSetText(h:HWND; Text:PAnsiChar);  external 'BtnSetText@{tmp}\botva2.dll stdcall delayload';
procedure BtnSetVisibility(h:HWND; Value:boolean); external 'BtnSetVisibility@{tmp}\botva2.dll stdcall delayload';
//procedure BtnSetFont(h:HWND; Font:Cardinal); external 'BtnSetFont@{tmp}\botva2.dll stdcall delayload';
//procedure BtnSetFontColor(h:HWND; NormalFontColor, FocusedFontColor, PressedFontColor, DisabledFontColor: Cardinal); external 'BtnSetFontColor@{tmp}\botva2.dll stdcall delayload';
procedure BtnSetEvent(h:HWND; EventID:integer; Event:Longword); external 'BtnSetEvent@{tmp}\botva2.dll stdcall delayload';
//procedure BtnSetCursor(h:HWND; hCur:Cardinal); external 'BtnSetCursor@{tmp}\botva2.dll stdcall delayload';
procedure BtnSetEnabled(h:HWND; Value:boolean); external 'BtnSetEnabled@{tmp}\botva2.dll stdcall delayload';
//function  GetSysCursorHandle(id:integer):Cardinal; external 'GetSysCursorHandle@{tmp}\botva2.dll stdcall delayload';
function  BtnGetChecked(h:HWND):boolean; external 'BtnGetChecked@{tmp}\botva2.dll stdcall delayload';
procedure BtnSetChecked(h:HWND; Value:boolean); external 'BtnSetChecked@{tmp}\botva2.dll stdcall delayload';
//procedure CreateFormFromImage(h:HWND; FileName:PAnsiChar); external 'CreateFormFromImage@{tmp}\botva2.dll stdcall delayload';
procedure BtnSetPosition(h:HWND; NewLeft, NewTop, NewWidth, NewHeight: integer);  external 'BtnSetPosition@{tmp}\botva2.dll stdcall delayload';
//function  SetLayeredWindowAttributes(hwnd:HWND; crKey:Longint; bAlpha:byte; dwFlags:longint ):longint;
//external  'SetLayeredWindowAttributes@user32 stdcall'; //函数声明
function  SetWindowLong(Wnd: HWnd; Index: Integer; NewLong: Longint): Longint; external 'SetWindowLongA@user32.dll stdcall';
function  PBCallBack(P:TPBProc;ParamCount:integer):LongWord; external 'wrapcallback@files:innocallback.dll stdcall';
function  CallWindowProc(lpPrevWndFunc: Longint; hWnd: HWND; Msg: UINT; wParam, lParam: Longint): Longint; external 'CallWindowProcA@user32.dll stdcall';
procedure ImgSetVisiblePart(img:Longint; NewLeft, NewTop, NewWidth, NewHeight : integer); external 'ImgSetVisiblePart@files:botva2.dll stdcall';
//function  SetTimer(hWnd: LongWord; nIDEvent, uElapse: LongWord; lpTimerFunc: LongWord): LongWord; external 'SetTimer@user32.dll stdcall';
//function  KillTimer(hWnd: LongWord; nIDEvent: LongWord): LongWord; external 'KillTimer@user32.dll stdcall';
//function  GetWindowLong(Wnd: HWnd; Index: Integer): Longint; external 'GetWindowLongA@user32.dll stdcall';
function  ReleaseCapture(): Longint; external 'ReleaseCapture@user32.dll stdcall';
function  CreateRoundRectRgn(p1, p2, p3, p4, p5, p6: Integer): THandle; external 'CreateRoundRectRgn@gdi32 stdcall';
function  SetWindowRgn(hWnd: HWND; hRgn: THandle; bRedraw: Boolean): Integer; external 'SetWindowRgn@user32 stdcall';
procedure ShapeForm(aForm: TForm; edgeSize: integer); //圆角
  var
    FormRegion:LongWord;
  begin
    FormRegion:=CreateRoundRectRgn(0,0,aForm.Width,aForm.Height,edgeSize,edgeSize);
    SetWindowRgn(aForm.Handle,FormRegion,True);
  end;

  var i,j:Integer;
var str:String;
var ver:array[1..4] of Integer;

//true 为高版本
function CheckVersion(vers: String): Boolean;
begin
  //MsgBox(IntToStr(Length(vers)),mbConfirmation, MB_OK);

  j := 1;
  ver[1] := 1;
  ver[2] := 0;
  ver[3] := 0;
  ver[4] := 1;
  result := false;

  for i:=1 to Length(vers) do
  begin
    //MsgBox(vers[i+1],mbConfirmation, MB_OK);
    if vers[i] <> '.' then
    begin
      //检查是否是数字
      if (vers[i] < '0') or (vers[i] > '9') then
      begin
        result := false;
        break;
      end;
      str := str + vers[i]
      continue;
    end
    else
    begin
      if StrToInt(str) > ver[j] then
      begin
        result:=true;
        break;
      end;
      j:=j+1;
      if j>4 then
      begin
        break ;
      end;
      str := '';
    end;
  end;
  if (Length(str) <> 0) and (result = true) then
  begin
     if StrToInt(str) > ver[j] then
      begin
        result := true
      end;
  end;
end;

var version: String;
// 安装前强制杀进
// 该函数在安装程序初始化时调用，返回False 将中断安装，True则继续安装.程
function InitializeSetup(): Boolean;
  var ErrorCode: Integer;
  var
  Names: TArrayOfString;
  I: Integer;
  S: String;
  ResultCode: Integer;

  iRet:Integer;
  begin
    ShellExec('open','taskkill.exe','/f /im {#MyAppExeName}','',SW_HIDE,ewNoWait,ErrorCode);
    ShellExec('open','tskill.exe',' {#MyAppName}','',SW_HIDE,ewNoWait,ErrorCode);
    result := True;
  if   RegGetSubkeyNames(HKLM, 'SOFTWARE\Classes\{#MyAppName}\Versions',Names) then
  begin
    for I := 0 to GetArrayLength(Names)-1 do
    begin

      if ( (CompareStr(Names[I], '3.1.2.0')=0) or (CompareStr(Names[I], '3.1.2.0')=0) ) then
      begin
        // 先判断卸载程序在不在
         RegQueryStringValue(HKLM, 'SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{AAD39D90-7727-48BD-9F41-8F8421917CC1}_is1','UninstallString',S)
        if Length(S)>0 then
        begin
          if S[1]='"' then
        begin
          Delete(S,1,1)
          end;
          //MsgBox(S,mbError,MB_OK);
          if S[Length(S)] = '"' then
          begin
            Delete(S,Length(S),1)
          end;
        end;

        //MsgBox(S,mbError,MB_OK);
        if not FileExists(S) then
        begin
          //不存在继续
          RegDeleteKeyIncludingSubkeys(HKLM, 'SOFTWARE\Classes\{#MyAppName}\versions\'+Names[I])
          continue
        end;
      end;

      S := 'SOFTWARE\Classes\{#MyAppName}\versions\'+Names[I];
      RegQueryStringValue(HKLM,S , '', version);

      if not CheckVersion(version) then
      begin
         if MsgBox('当前机器已经安装 {#MyAppName} '+Names[I]+'，继续安装会卸载当前版本。'#13#13' 是否继续安装？',mbConfirmation, MB_YESNO) = IDNO then
         begin
           exit;
         end;
      end
      else
      begin//当前版本低，先卸载高版本再安装
         MsgBox('当前机器已经安装 {#MyAppName} '+Names[I]+'比当前版本高， 请先卸载后，再安装！',mbInformation, MB_OK)
         exit;
      end;

      //删除上次的注册表，和安装文件
      RegDeleteKeyIncludingSubkeys(HKLM, 'SOFTWARE\Classes\{#MyAppName}\Versions\'+Names[I])
      RegQueryStringValue(HKLM, 'SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{AAD39D90-7727-48BD-9F41-8F8421917CC1}_is1','UninstallString',S)

      ShellExec('', S, '', '', SW_SHOW,     ewWaitUntilTerminated, ResultCode)

      while (ResultCode <> 0) do
      begin
        iRet := MsgBox('卸载不成功。是否继续卸载？'#13#13'点击“是”    继续卸载'#13'点击“否”    不卸载，继续安装'#13'点击“取消” 退出安装',mbConfirmation, MB_YESNOCANCEL)
        if iRet=IDYES then
        begin
          ShellExec('', S, '', '', SW_SHOW,     ewWaitUntilTerminated, ResultCode)
        end
        else if iRet=IDNO then
        begin
          ResultCode := 0
        end
        else
        begin
          exit
        end;
      end;

      //DelTree(S,True, True, True)
    end;
  end else
  begin
    // add any code to handle failure here
  end;




//  if RegValueExists(HKLM, 'SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{F333A33D-125C-32A2-8DCE-5C5D14231E27}', 'Version') // Microsoft Visual C++ 2008 Redistributable X86 [XP/Win7 32位 V8.0.61001]
//    then
//      begin
//        vc8SP1Missing := false;
//      end
//    else
//      begin
//        vc8SP1Missing := true;
//      end;
  result := true;
  end;

// 卸载前强制杀进程
function InitializeUninstall(): Boolean;
  var ErrorCode: Integer;
  begin
    ShellExec('open','taskkill.exe','/f /im {#MyAppExeName}','',SW_HIDE,ewNoWait,ErrorCode);
    ShellExec('open','tskill.exe',' {#MyAppName}','',SW_HIDE,ewNoWait,ErrorCode);
    result := True;
  end;

var
  BGimg:longint;
  btnShowLicense,MinBtn,CancelBtn,btnBrowser,btnSetup,btnBack:HWND;
  isWelcomePage:boolean;
  pathEdit:tedit;
  labelReadImg,licenseImg,progressbgImg,PBOldProc,labelAutoRunImg:longint;
  checkboxLicense,checkboxAutoRun:HWND;
  licenseRich:TRichEditViewer;

// 向导调用这个事件函数确定是否在所有页或不在一个特殊页 (用PageID 指定) 显示。如果返回True，将跳过该页；如果你返回False，该页被显示。
// 注意: 这个事件函数不被wpWelcome、wpPreparing 和wpInstalling 页调用，还有安装程序已经确定要跳过的页也不会调用

function ShouldSkipPage(PageID: Integer): Boolean;
  begin
    if PageID=wpLicense then
      result:=true;
    if PageID=wpInfoBefore then
      result:=true;
    if PageID=wpUserInfo then
      result:=true;
    if PageID=wpSelectDir then
      result:=true;
    if PageID=wpSelectComponents then
      result:=true;
    if PageID=wpSelectProgramGroup then
      result:=true;
    if PageID=wpSelectTasks then
      result:=true;
  end;

// 关闭按钮
procedure CancelBtnOnClick(hBtn:HWND);
  begin
    WizardForm.CancelButton.Click;
  end;

// 最小化按钮
procedure MinBtnOnClick(hBtn:HWND);
  begin
    SendMessage(WizardForm.Handle,WM_SYSCOMMAND,61472,0);
  end;

// 浏览文件夹按钮
procedure btnBrowserclick(hBtn:HWND);
  begin
    WizardForm.DirBrowseButton.Click;
    pathEdit.text := WizardForm.DirEdit.text;
  end;

// 路径选择器 change
procedure pathEditChange(Sender: TObject);
  begin
    WizardForm.DirEdit.text:=pathEdit.Text ;
 end;

// 立即安装等按钮的操作就是不断地下一步
procedure nextSetpBtnClick(hBtn:HWND);
  begin
    WizardForm.NextButton.Click;
    WizardForm.NextButton.Click;
  end;

// 安装的进度条
function PBProc(h:hWnd;Msg,wParam,lParam:Longint):Longint;
  var
    pr,i1,i2 : Extended;
    w : integer;
  begin
    Result:=CallWindowProc(PBOldProc,h,Msg,wParam,lParam);
    if (Msg=$402) and (WizardForm.ProgressGauge.Position>WizardForm.ProgressGauge.Min) then
    begin
      i1:=WizardForm.ProgressGauge.Position-WizardForm.ProgressGauge.Min;
      i2:=WizardForm.ProgressGauge.Max-WizardForm.ProgressGauge.Min;
      pr:=i1*100/i2;
      //w:=Round(650*pr/100);
      w:=Round(422*pr/100);
      //ImgSetPosition(progressbgImg,0,320,w,15);
      ImgSetPosition(progressbgImg,114,336,w,15);
      ImgSetVisiblePart(progressbgImg,0,0,w,15);
      ImgApplyChanges(WizardForm.Handle);
    end;
  end;
  
  

  

// 鼠标拖动
procedure WizardMouseDown(Sender: TObject; Button: TMouseButton; Shift: TShiftState; X, Y: Integer);
  begin
    ReleaseCapture
    SendMessage(WizardForm.Handle, $0112, $F012, 0)
  end;

// 查看 license
procedure btnShowLicenseClick(hBtn:HWND);
  begin
    if isWelcomePage=true then
    begin
      licenseImg:=ImgLoad(WizardForm.Handle,ExpandConstant('{tmp}\bg_license.png'),0,0,650,450,false,false);
      isWelcomePage:=false
      licenseRich.Height:=295
      BtnSetVisibility(checkboxLicense,false)
      BtnSetVisibility(btnShowLicense,false)
      BtnSetVisibility(btnSetup,false)
      BtnSetVisibility(btnBrowser,false)
      pathEdit.Hide
      BtnSetVisibility(btnBack,true)
    end else
    begin
      isWelcomePage:=true
      BGimg:=ImgLoad(WizardForm.Handle,ExpandConstant('{tmp}\bg_welcome.png'),0,0,650,450,false,true);
      //labelReadImg:=ImgLoad(WizardForm.Handle,ExpandConstant('{tmp}\label_read.png'),243,398,72,20,false,true);
      licenseRich.Height:=0
         //显示相关按钮
      BtnSetVisibility(checkboxLicense,true) 
      BtnSetVisibility(btnShowLicense,true)
      BtnSetVisibility(btnSetup,true)
      ImgRelease(licenseImg)
      BtnSetVisibility(btnBrowser,true)
      pathEdit.show
      BtnSetVisibility(btnBack,false)
    end
      ImgApplyChanges(WizardForm.Handle)
  end;

// 勾选查看 license
procedure checkboxLicenseClick(hBtn:HWND);
  begin
    if BtnGetChecked(checkboxLicense)=true then
    begin
      BtnSetEnabled(btnSetup,true)
    end else
    begin
      BtnSetEnabled(btnSetup,false)
    end
  end;

// 初始化窗口
procedure InitializeWizard();
  begin
    // 设置欢迎向导页的尺寸大小
    WizardForm.OuterNotebook.hide;
    WizardForm.Bevel.Hide;
    WizardForm.BorderStyle:=bsnone;
    WizardForm.Position:=poDesktopCenter;
     WizardForm.Center;
    WizardForm.Width:=650;  //设置安装界面高和宽
    WizardForm.Height:=450;
    WizardForm.Color:=clWhite;
    WizardForm.OnMouseDown:=@WizardMouseDown
    isWelcomePage:=true;
    // WizardForm.InnerNotebook.Hide;
    //wizardform.Color:=TransparentColor;    //背景色

    

    // 加载资源到 tmp 临时目录
    ExtractTemporaryFile('bg_welcome.png');
    ExtractTemporaryFile('bg_installing.png');
    ExtractTemporaryFile('bg_license.png');
    ExtractTemporaryFile('label_read.png');
    ExtractTemporaryFile('label_license.png');
    ExtractTemporaryFile('license.txt');
    ExtractTemporaryFile('btn_close.png');
    ExtractTemporaryFile('btn_min.png');
    ExtractTemporaryFile('btn_back.png');
    ExtractTemporaryFile('btn_setup.png');
    ExtractTemporaryFile('btn_browser.png');
    ExtractTemporaryFile('checkbox.png');
    ExtractTemporaryFile('bg_finished.png');
    ExtractTemporaryFile('btn_complete.png');
    ExtractTemporaryFile('loading.png');
    //ExtractTemporaryFile('label_autorun.png');

    // 关闭按钮样式
    //CancelBtn:=BtnCreate(WizardForm.Handle,627,8,12,12,ExpandConstant('{tmp}\btn_close.png'),1,False)
    CancelBtn:=BtnCreate(WizardForm.Handle,616,10,24,24,ExpandConstant('{tmp}\btn_close.png'),1,False)
    BtnSetEvent(CancelBtn,BtnClickEventID,WrapBtnCallback(@CancelBtnOnClick,1));

    // 最小化按钮样式
    //MinBtn:=BtnCreate(WizardForm.Handle,607,8,12,12,ExpandConstant('{tmp}\btn_min.png'),1,False)
    MinBtn:=BtnCreate(WizardForm.Handle,589,10,24,24,ExpandConstant('{tmp}\btn_min.png'),1,False)
    BtnSetEvent(MinBtn,BtnClickEventID,WrapBtnCallback(@MinBtnOnClick,1));

    // 立即安装按钮样式
    //btnSetup:=BtnCreate(WizardForm.Handle,195,340,260,44,ExpandConstant('{tmp}\btn_setup.png'),1,False)
    btnSetup:=BtnCreate(WizardForm.Handle,220,349,210,50,ExpandConstant('{tmp}\btn_setup.png'),1,False)
    BtnSetEvent(btnSetup,BtnClickEventID,WrapBtnCallback(@nextSetpBtnClick,1));

    // 返回按钮样式
    //btnBack:=BtnCreate(WizardForm.Handle,285,390,80,32,ExpandConstant('{tmp}\btn_back.png'),1,False)
    btnBack:=BtnCreate(WizardForm.Handle,268,380,114,40,ExpandConstant('{tmp}\btn_back.png'),1,False)
    BtnSetEvent(btnBack,BtnClickEventID,WrapBtnCallback(@btnShowLicenseClick,1));
    BtnSetVisibility(btnBack,false)

    pathEdit:= TEdit.Create(WizardForm);
    with pathEdit do
    begin
      Parent:=WizardForm;
      text:=WizardForm.DirEdit.text;
      Font.Name:='宋体';
      Font.Size:=14;
      //Font.Color := clWhite;
      BorderStyle:=bsNone;
      //SetBounds(110,272,340,15)  //字体相关信息1
      //SetBounds(35,269,455,40)  //字体相关信息 2
      SetBounds(40,280,450,18)  //字体相关信息 3
      OnChange:=@pathEditChange;
      TabStop:=false;
    end;

    // 浏览按钮样式
    //btnBrowser:=BtnCreate(WizardForm.Handle,470,262,80,32,ExpandConstant('{tmp}\btn_browser.png'),1,False)
    btnBrowser:=BtnCreate(WizardForm.Handle,502,269,114,40,ExpandConstant('{tmp}\btn_browser.png'),1,False)
    BtnSetEvent(btnBrowser,BtnClickEventID,WrapBtnCallback(@btnBrowserclick,1));

    PBOldProc:=SetWindowLong(WizardForm.ProgressGauge.Handle,-4,PBCallBack(@PBProc,4));

    // 查看 license 的文本区域
    licenseRich:= TRichEditViewer.Create(WizardForm);
    with licenseRich do
    begin
      Parent:=WizardForm;
      ReadOnly:=true;
      SCROLLBARS:=ssVertical;
      font.Name:='宋体'
      Color:=clWhite;
      BorderStyle:=bsNone;
      //SetBounds(40,65,570,0)
      SetBounds(40,50,570,0);
      Lines.LoadFromFile(ExpandConstant('{tmp}\license.txt'));
      TabStop:=false;
    end;

    ImgApplyChanges(WizardForm.Handle)
  end;

// 该过程在安装终止时被调用，注意及时在用户没有安装任何文件之前退出也会被调用。
procedure DeinitializeSetup();
  var RCode: Integer;
  begin
    // 检查是否需要自动运行
    if BtngetChecked(checkboxAutoRun)=true then
    begin
      Exec(ExpandConstant('{app}\{#MyAppExeName}'),'','',SW_SHOW, ewNoWait,RCode);
    end

    gdipShutdown;
  end;
  
  



//窗口移动
procedure WizardFormMouseDown(Sender: TObject; Button: TMouseButton; Shift: TShiftState; X, Y: Integer);
begin
  ReleaseCapture;
  SendMessage(WizardForm.Handle, WM_SYSCOMMAND, $F012, 0);
end;


// 在新向导页 (由CurPageID 指定) 显示后调用。
procedure CurPageChanged(CurPageID: Integer);
  begin
    // 默认的流程按钮隐藏掉
    WizardForm.NextButton.Visible:=false;
    WizardForm.CancelButton.Height:=0;
    WizardForm.BackButton.Height:=0;
    WizardForm.BorderStyle:=bsNone;
    
     WizardForm.Center
    if CurPageID=wpWelcome then
      begin
        BGimg:=ImgLoad(WizardForm.Handle,ExpandConstant('{tmp}\bg_welcome.png'),0,0,650,450,true,true);

        // license 提示
        //checkboxLicense:=BtnCreate(WizardForm.Handle,220,400,16,16,ExpandConstant('{tmp}\checkbox.png'),1,true)
        checkboxLicense:=BtnCreate(WizardForm.Handle,222,413,20,20,ExpandConstant('{tmp}\checkbox.png'),1,true)
        BtnSetEvent(checkboxLicense,BtnClickEventID,WrapBtnCallback(@checkboxLicenseClick,1))

        // 默认勾选 阅读并同意
        BtnSetChecked(checkboxLicense,true)
        //labelReadImg:=ImgLoad(WizardForm.Handle,ExpandConstant('{tmp}\label_read.png'),243,398,72,20,false,true);
        //btnShowLicense:=BtnCreate(WizardForm.Handle,320,398,117,20,ExpandConstant('{tmp}\label_license.png'),4,false)
        btnShowLicense:=BtnCreate(WizardForm.Handle,255,410,171,24,ExpandConstant('{tmp}\label_license.png'),4,false)
        BtnSetEvent(btnShowLicense,BtnClickEventID,WrapBtnCallback(@btnShowLicenseClick,1))

        WizardForm.Width:=650;
        WizardForm.Height:=450;
        WizardForm.Show;
        //AnimateWindow(StrToInt(ExpandConstant('{wizardhwnd}')), 400, AW_Center or AW_Activate);
       //SetWindowLong(StrToInt(ExpandConstant('{wizardhwnd}')),GWL_Exstyle, WS_Ex_Layered);
       //SetLayeredWindowAttributes(StrToInt(ExpandConstant('{wizardhwnd}')), 0, 240, LWA_Alpha);
        
      end

    if CurPageID = wpInstalling then  //正在安装
      begin
        BtnSetPosition(checkboxLicense,560,421,75,15);
        pathEdit.Hide;
        BtnSetVisibility(btnBrowser,false)
        WizardForm.Height:=450
        BtnSetVisibility(btnShowLicense,false);
        BtnSetVisibility(checkboxLicense,false);
        //正在安装图
        BGimg:=ImgLoad(WizardForm.Handle,ExpandConstant('{tmp}\bg_installing.png'),0,0,650,450,false,true);
         //进度条
        progressbgImg:=ImgLoad(WizardForm.Handle,ExpandConstant('{tmp}\loading.png'),0,320,0,0,True,True);

        BtnSetVisibility(btnSetup,false);
        
      end

    if CurPageID = wpFinished then   //完成安装
      begin
        ImgSetVisibility(progressbgImg,false)
        //btnSetup:=BtnCreate(WizardForm.Handle,195,340,260,44,ExpandConstant('{tmp}\btn_complete.png'),1,False)
        btnSetup:=BtnCreate(WizardForm.Handle,220,349,210,50,ExpandConstant('{tmp}\btn_complete.png'),1,False)
        BtnSetEvent(btnSetup,BtnClickEventID,WrapBtnCallback(@nextSetpBtnClick,1));

        BGimg:=ImgLoad(WizardForm.Handle,ExpandConstant('{tmp}\bg_finished.png'),0,0,650,450,false,true);
   
        // 是否自动运行
        //checkboxAutoRun:=BtnCreate(WizardForm.Handle,275,400,16,16,ExpandConstant('{tmp}\checkbox.png'),1,true)
        //;labelAutoRunImg:=ImgLoad(WizardForm.Handle,ExpandConstant('{tmp}\label_autorun.png'),295,398,84,20,false,true);

        // 默认勾选
        //;BtnSetChecked(checkboxAutoRun,true)

      end

    ImgApplyChanges(WizardForm.Handle)
  end;